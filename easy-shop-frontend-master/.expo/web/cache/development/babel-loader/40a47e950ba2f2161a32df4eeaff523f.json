{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Text, Left, Right, ListItem, Thumbnail, Body } from \"native-base\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../Redux/Actions/cartActions\";\nimport Toast from \"react-native-toast-message\";\nimport axios from \"axios\";\nimport baseURL from \"../../../assets/common/baseUrl\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Confirm = function Confirm(props) {\n  var finalOrder = props.route.params;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      productUpdate = _useState2[0],\n      setProductUpdate = _useState2[1];\n\n  useEffect(function () {\n    if (finalOrder) {\n      getProducts(finalOrder);\n    }\n\n    return function () {\n      setProductUpdate();\n    };\n  }, [props]);\n\n  var getProducts = function getProducts(x) {\n    var order = x.order.order;\n    var products = [];\n\n    if (order) {\n      order.orderItems.forEach(function (cart) {\n        axios.get(baseURL + \"products/\" + cart.product).then(function (data) {\n          products.push(data.data);\n          setProductUpdate(products);\n        }).catch(function (e) {\n          console.log(e);\n        });\n      });\n    }\n  };\n\n  var confirmOrder = function confirmOrder() {\n    var order = finalOrder.order.order;\n    axios.post(baseURL + \"orders\", order).then(function (res) {\n      if (res.status == 200 || res.status == 201) {\n        Toast.show({\n          topOffset: 60,\n          type: \"success\",\n          text1: \"Order Completed\",\n          text2: \"\"\n        });\n        setTimeout(function () {\n          props.clearCart();\n          props.navigation.navigate(\"Cart\");\n        }, 500);\n      }\n    }).catch(function (error) {\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Something went wrong\",\n        text2: \"Please try again\"\n      });\n    });\n  };\n\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: _jsxs(View, {\n      style: styles.titleContainer,\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\"\n        },\n        children: \"Confirm Order\"\n      }), props.route.params ? _jsxs(View, {\n        style: {\n          borderWidth: 1,\n          borderColor: \"orange\"\n        },\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Shipping to:\"\n        }), _jsxs(View, {\n          style: {\n            padding: 8\n          },\n          children: [_jsxs(Text, {\n            children: [\"Address: \", finalOrder.order.order.shippingAddress1]\n          }), _jsxs(Text, {\n            children: [\"Address2: \", finalOrder.order.order.shippingAddress2]\n          }), _jsxs(Text, {\n            children: [\"City: \", finalOrder.order.order.city]\n          }), _jsxs(Text, {\n            children: [\"Zip Code: \", finalOrder.order.order.zip]\n          }), _jsxs(Text, {\n            children: [\"Country: \", finalOrder.order.order.country]\n          })]\n        }), _jsx(Text, {\n          style: styles.title,\n          children: \"Items:\"\n        }), productUpdate && _jsx(_Fragment, {\n          children: productUpdate.map(function (x) {\n            return _jsxs(ListItem, {\n              style: styles.listItem,\n              avatar: true,\n              children: [_jsx(Left, {\n                children: _jsx(Thumbnail, {\n                  source: {\n                    uri: x.image\n                  }\n                })\n              }), _jsxs(Body, {\n                style: styles.body,\n                children: [_jsx(Left, {\n                  children: _jsx(Text, {\n                    children: x.name\n                  })\n                }), _jsx(Right, {\n                  children: _jsxs(Text, {\n                    children: [\"$ \", x.price]\n                  })\n                })]\n              })]\n            }, x.name);\n          })\n        })]\n      }) : null, _jsx(View, {\n        style: {\n          alignItems: \"center\",\n          margin: 20\n        },\n        children: _jsx(Button, {\n          title: \"Place order\",\n          onPress: confirmOrder\n        })\n      })]\n    })\n  });\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    clearCart: function clearCart() {\n      return dispatch(actions.clearCart());\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    height: height,\n    padding: 8,\n    alignContent: \"center\",\n    backgroundColor: \"white\"\n  },\n  titleContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 8\n  },\n  title: {\n    alignSelf: \"center\",\n    margin: 8,\n    fontSize: 16,\n    fontWeight: \"bold\"\n  },\n  listItem: {\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    width: width / 1.2\n  },\n  body: {\n    margin: 10,\n    alignItems: \"center\",\n    flexDirection: \"row\"\n  }\n});\nexport default connect(null, mapDispatchToProps)(Confirm);","map":{"version":3,"names":["React","useEffect","useState","Text","Left","Right","ListItem","Thumbnail","Body","connect","actions","Toast","axios","baseURL","Dimensions","get","width","height","Confirm","props","finalOrder","route","params","productUpdate","setProductUpdate","getProducts","x","order","products","orderItems","forEach","cart","product","then","data","push","catch","e","console","log","confirmOrder","post","res","status","show","topOffset","type","text1","text2","setTimeout","clearCart","navigation","navigate","error","styles","container","titleContainer","fontSize","fontWeight","borderWidth","borderColor","title","padding","shippingAddress1","shippingAddress2","city","zip","country","map","listItem","uri","image","body","name","price","alignItems","margin","mapDispatchToProps","dispatch","StyleSheet","create","alignContent","backgroundColor","justifyContent","alignSelf","flexDirection"],"sources":["D:/easy-shop-frontend-master/easy-shop-frontend-master/Screens/Cart/Checkout/Confirm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet, Dimensions, ScrollView, Button } from \"react-native\";\nimport { Text, Left, Right, ListItem, Thumbnail, Body } from \"native-base\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../Redux/Actions/cartActions\";\n\nimport Toast from \"react-native-toast-message\";\nimport axios from \"axios\";\nimport baseURL from \"../../../assets/common/baseUrl\";\n\nvar { width, height } = Dimensions.get(\"window\");\n\nconst Confirm = (props) => {\n  const finalOrder = props.route.params;\n\n  // Add this\n  const [productUpdate, setProductUpdate] = useState();\n  useEffect(() => {\n      if(finalOrder) {\n        getProducts(finalOrder);\n      }\n    return () => {\n      setProductUpdate();\n    };\n  }, [props]);\n\n  // Add this\n  const getProducts = (x) => {\n    const order = x.order.order;\n    var products = [];\n    if(order) {\n        order.orderItems.forEach((cart) => {\n            axios\n              .get(`${baseURL}products/${cart.product}`)\n              .then((data) => {\n                products.push(data.data);\n                setProductUpdate(products);\n              })\n              .catch((e) => {\n                console.log(e);\n              });\n          });\n    }\n    \n  };\n\n  const confirmOrder = () => {\n    const order = finalOrder.order.order;\n    axios\n      .post(`${baseURL}orders`, order)\n      .then((res) => {\n        if (res.status == 200 || res.status == 201) {\n          Toast.show({\n            topOffset: 60,\n            type: \"success\",\n            text1: \"Order Completed\",\n            text2: \"\",\n          });\n          setTimeout(() => {\n            props.clearCart();\n            props.navigation.navigate(\"Cart\");\n          }, 500);\n        }\n      })\n      .catch((error) => {\n        Toast.show({\n          topOffset: 60,\n          type: \"error\",\n          text1: \"Something went wrong\",\n          text2: \"Please try again\",\n        });\n      });\n  };\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <View style={styles.titleContainer}>\n        <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>Confirm Order</Text>\n        {props.route.params ? (\n          <View style={{ borderWidth: 1, borderColor: \"orange\" }}>\n            <Text style={styles.title}>Shipping to:</Text>\n            <View style={{ padding: 8 }}>\n              <Text>Address: {finalOrder.order.order.shippingAddress1}</Text>\n              <Text>Address2: {finalOrder.order.order.shippingAddress2}</Text>\n              <Text>City: {finalOrder.order.order.city}</Text>\n              <Text>Zip Code: {finalOrder.order.order.zip}</Text>\n              <Text>Country: {finalOrder.order.order.country}</Text>\n            </View>\n            <Text style={styles.title}>Items:</Text>\n            {/* CHANGE THIS */}\n            {productUpdate && (\n              <>\n                {productUpdate.map((x) => {\n                  return (\n                    <ListItem style={styles.listItem} key={x.name} avatar>\n                      <Left>\n                        <Thumbnail source={{ uri: x.image }} />\n                      </Left>\n                      <Body style={styles.body}>\n                        <Left>\n                          <Text>{x.name}</Text>\n                        </Left>\n                        <Right>\n                          <Text>$ {x.price}</Text>\n                        </Right>\n                      </Body>\n                    </ListItem>\n                  );\n                })}\n              </>\n            )}\n          </View>\n        ) : null}\n        <View style={{ alignItems: \"center\", margin: 20 }}>\n          <Button title={\"Place order\"} onPress={confirmOrder} />\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    clearCart: () => dispatch(actions.clearCart()),\n  };\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: height,\n    padding: 8,\n    alignContent: \"center\",\n    backgroundColor: \"white\",\n  },\n  titleContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 8,\n  },\n  title: {\n    alignSelf: \"center\",\n    margin: 8,\n    fontSize: 16,\n    fontWeight: \"bold\",\n  },\n  listItem: {\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    width: width / 1.2,\n  },\n  body: {\n    margin: 10,\n    alignItems: \"center\",\n    flexDirection: \"row\",\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(Confirm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}