{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Item, Picker, Toast } from 'native-base';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport FormContainer from \"../../../Shared/Form/FormContainer\";\nimport Input from \"../../../Shared/Form/Input\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport AuthGlobal from \"../../../Context/store/AuthGlobal\";\nimport { connect } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar countries = require(\"../../../assets/countries.json\");\n\nvar Checkout = function Checkout(props) {\n  var context = useContext(AuthGlobal);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderItems = _useState2[0],\n      setOrderItems = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address2 = _useState6[0],\n      setAddress2 = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      city = _useState8[0],\n      setCity = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      zip = _useState10[0],\n      setZip = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      country = _useState12[0],\n      setCountry = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      phone = _useState14[0],\n      setPhone = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      user = _useState16[0],\n      setUser = _useState16[1];\n\n  useEffect(function () {\n    setOrderItems(props.cartItems);\n\n    if (context.stateUser.isAuthenticated) {\n      setUser(context.stateUser.user.sub);\n    } else {\n      props.navigation.navigate(\"Cart\");\n      Toast.show({\n        topOffset: 60,\n        type: \"error\",\n        text1: \"Please Login to Checkout\",\n        text2: \"\"\n      });\n    }\n\n    return function () {\n      setOrderItems();\n    };\n  }, []);\n\n  var checkOut = function checkOut() {\n    console.log(\"orders\", orderItems);\n    var order = {\n      city: city,\n      country: country,\n      dateOrdered: Date.now(),\n      orderItems: orderItems,\n      phone: phone,\n      shippingAddress1: address,\n      shippingAddress2: address2,\n      status: \"3\",\n      user: user,\n      zip: zip\n    };\n    props.navigation.navigate(\"Payment\", {\n      order: order\n    });\n  };\n\n  return _jsx(KeyboardAwareScrollView, {\n    viewIsInsideTabBar: true,\n    extraHeight: 200,\n    enableOnAndroid: true,\n    children: _jsxs(FormContainer, {\n      title: \"Shipping Address\",\n      children: [_jsx(Input, {\n        placeholder: \"Phone\",\n        name: \"phone\",\n        value: phone,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          return setPhone(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Shipping Address 1\",\n        name: \"ShippingAddress1\",\n        value: address,\n        onChangeText: function onChangeText(text) {\n          return setAddress(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Shipping Address 2\",\n        name: \"ShippingAddress2\",\n        value: address2,\n        onChangeText: function onChangeText(text) {\n          return setAddress2(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"City\",\n        name: \"city\",\n        value: city,\n        onChangeText: function onChangeText(text) {\n          return setCity(text);\n        }\n      }), _jsx(Input, {\n        placeholder: \"Zip Code\",\n        name: \"zip\",\n        value: zip,\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          return setZip(text);\n        }\n      }), _jsx(Item, {\n        picker: true,\n        children: _jsx(Picker, {\n          mode: \"dropdown\",\n          iosIcon: _jsx(Icon, {\n            name: \"arrow-down\",\n            color: \"#007aff\"\n          }),\n          style: {\n            width: undefined\n          },\n          selectedValue: country,\n          placeholder: \"Select your country\",\n          placeholderStyle: {\n            color: '#007aff'\n          },\n          placeholderIconColor: \"#007aff\",\n          onValueChange: function onValueChange(e) {\n            return setCountry(e);\n          },\n          children: countries.map(function (c) {\n            return _jsx(Picker.Item, {\n              label: c.name,\n              value: c.name\n            }, c.code);\n          })\n        })\n      }), _jsx(View, {\n        style: {\n          width: '80%',\n          alignItems: \"center\"\n        },\n        children: _jsx(Button, {\n          title: \"Confirm\",\n          onPress: function onPress() {\n            return checkOut();\n          }\n        })\n      })]\n    })\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var cartItems = state.cartItems;\n  return {\n    cartItems: cartItems\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"names":["React","useEffect","useState","useContext","Item","Picker","Toast","Icon","FormContainer","Input","KeyboardAwareScrollView","AuthGlobal","connect","countries","require","Checkout","props","context","orderItems","setOrderItems","address","setAddress","address2","setAddress2","city","setCity","zip","setZip","country","setCountry","phone","setPhone","user","setUser","cartItems","stateUser","isAuthenticated","sub","navigation","navigate","show","topOffset","type","text1","text2","checkOut","console","log","order","dateOrdered","Date","now","shippingAddress1","shippingAddress2","status","text","width","undefined","color","e","map","c","name","code","alignItems","mapStateToProps","state"],"sources":["D:/easy-shop-frontend-master/Screens/Cart/Checkout/Checkout.js"],"sourcesContent":["import React, { useEffect, useState, useContext} from 'react'\nimport { Text, View, Button } from 'react-native'\nimport { Item, Picker, Toast } from 'native-base'\nimport Icon from 'react-native-vector-icons/FontAwesome'\nimport FormContainer from '../../../Shared/Form/FormContainer'\nimport Input from '../../../Shared/Form/Input'\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\nimport AuthGlobal from \"../../../Context/store/AuthGlobal\"\n\nimport { connect } from 'react-redux'\n\nconst countries = require(\"../../../assets/countries.json\");\n\nconst Checkout = (props) => {\n    const context = useContext(AuthGlobal)\n\n    const [ orderItems, setOrderItems ] = useState();\n    const [ address, setAddress ] = useState();\n    const [ address2, setAddress2 ] = useState();\n    const [ city, setCity ] = useState();\n    const [ zip, setZip ] = useState();\n    const [ country, setCountry ] = useState();\n    const [ phone, setPhone ] = useState();\n    const [ user, setUser ] = useState();\n\n    useEffect(() => {\n        setOrderItems(props.cartItems)\n\n        if(context.stateUser.isAuthenticated) {\n            setUser(context.stateUser.user.sub)\n        } else {\n            props.navigation.navigate(\"Cart\");\n            Toast.show({\n                topOffset: 60,\n                type: \"error\",\n                text1: \"Please Login to Checkout\",\n                text2: \"\"\n            });\n        }\n\n        return () => {\n            setOrderItems();\n        }\n    }, [])\n\n    const checkOut = () => {\n        console.log(\"orders\", orderItems)\n        let order = {\n            city,\n            country,\n            dateOrdered: Date.now(),\n            orderItems,\n            phone,\n            shippingAddress1: address,\n            shippingAddress2: address2,\n            status: \"3\",\n            user,\n            zip,\n        }\n\n        props.navigation.navigate(\"Payment\", {order: order })\n    }\n\n    return (\n        <KeyboardAwareScrollView\n            viewIsInsideTabBar={true}\n            extraHeight={200}\n            enableOnAndroid={true}\n        >\n            <FormContainer title={\"Shipping Address\"}>\n                <Input\n                    placeholder={\"Phone\"}\n                    name={\"phone\"}\n                    value={phone}\n                    keyboardType={\"numeric\"}\n                    onChangeText={(text) => setPhone(text)}\n                />\n                   <Input\n                    placeholder={\"Shipping Address 1\"}\n                    name={\"ShippingAddress1\"}\n                    value={address}\n                    onChangeText={(text) => setAddress(text)}\n                />\n                   <Input\n                    placeholder={\"Shipping Address 2\"}\n                    name={\"ShippingAddress2\"}\n                    value={address2}\n                    onChangeText={(text) => setAddress2(text)}\n                />\n                   <Input\n                    placeholder={\"City\"}\n                    name={\"city\"}\n                    value={city}\n                    onChangeText={(text) => setCity(text)}\n                />\n                   <Input\n                    placeholder={\"Zip Code\"}\n                    name={\"zip\"}\n                    value={zip}\n                    keyboardType={\"numeric\"}\n                    onChangeText={(text) => setZip(text)}\n                />\n                <Item picker>\n                    <Picker\n                        mode=\"dropdown\"\n                        iosIcon={<Icon name=\"arrow-down\" color={\"#007aff\"} />}\n                        style={{ width: undefined }}\n                        selectedValue={country}\n                        placeholder=\"Select your country\"\n                        placeholderStyle={{ color: '#007aff' }}\n                        placeholderIconColor=\"#007aff\"\n                        onValueChange={(e) => setCountry(e)}\n                    >\n                        {countries.map((c) => {\n                            return <Picker.Item \n                                    key={c.code} \n                                    label={c.name}\n                                    value={c.name}\n                                    />\n                        })}\n                    </Picker>\n                </Item>\n                <View style={{ width: '80%', alignItems: \"center\" }}>\n                    <Button title=\"Confirm\" onPress={() => checkOut()}/>\n                </View>\n            </FormContainer>\n        </KeyboardAwareScrollView>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    const { cartItems } = state;\n    return {\n        cartItems: cartItems,\n    }\n}\n\nexport default connect(mapStateToProps)(Checkout)"],"mappings":"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"},"metadata":{},"sourceType":"module"}