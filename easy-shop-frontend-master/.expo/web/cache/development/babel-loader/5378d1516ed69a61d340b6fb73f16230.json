{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useReducer, userEffect, useState } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport authReducer from \"../reducers/Auth.reducer\";\nimport { setCurrentUser } from \"../actions/Auth.actions\";\nimport AuthGlobal from \"./AuthGlobal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Auth = function Auth(props) {\n  var _useReducer = useReducer(authReducer, {\n    isAuthenticated: null,\n    user: {}\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      stateUser = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showChild = _useState2[0],\n      setShowChild = _useState2[1];\n\n  useEffect(function () {\n    setShowChild(true);\n\n    if (AsyncStorage.jwt) {\n      var decoded = AsyncStorage.jwt ? AsyncStorage.jwt : \"\";\n\n      if (setShowChild) {\n        dispatch(setCurrentUserUser(jwt_decode(decoded)));\n      }\n    }\n\n    return function () {\n      return setShowChild(false);\n    };\n  }, []);\n\n  if (!showChild) {\n    return null;\n  } else {\n    return _jsx(AuthGlobal.Provider, {\n      value: {\n        stateUser: stateUser,\n        dispatch: dispatch\n      },\n      children: props.children\n    });\n  }\n};\n\nexport default Auth;","map":{"version":3,"names":["React","useEffect","useReducer","userEffect","useState","jwt_decode","AsyncStorage","authReducer","setCurrentUser","AuthGlobal","Auth","props","isAuthenticated","user","stateUser","dispatch","showChild","setShowChild","jwt","decoded","setCurrentUserUser","children"],"sources":["D:/easy-shop-frontend-master/easy-shop-frontend-master/Context/store/Auth.js"],"sourcesContent":["import React, { useEffect, useReducer, userEffect, useState } from \"react\";\nimport jwt_decode from \"jwt-decode\";\nimport AsyncStorage from \"@react-native-community/async-storage\"\n\nimport authReducer from \"../reducers/Auth.reducer\";\nimport { setCurrentUser } from \"../actions/Auth.actions\";\nimport AuthGlobal from './AuthGlobal'\n\nconst Auth = props => {\n    const [stateUser, dispatch] = useReducer(authReducer, {\n        isAuthenticated: null,\n        user: {}\n    });\n    const [showChild, setShowChild] = useState(false);\n\n    useEffect(() => {\n        setShowChild(true);\n        if (AsyncStorage.jwt) {\n            const decoded = AsyncStorage.jwt ? AsyncStorage.jwt : \"\";\n            if (setShowChild) {\n                dispatch(setCurrentUserUser(jwt_decode(decoded)))\n            }\n        }\n        return () => setShowChild(false);\n    }, [])\n\n\n    if (!showChild) {\n        return null;\n    } else {\n        return (\n            <AuthGlobal.Provider\n                value={{\n                    stateUser,\n                    dispatch\n                }}\n            >\n                {props.children}\n            </AuthGlobal.Provider>\n        )\n    }\n};\n\nexport default Auth;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,UAAvC,EAAmDC,QAAnD,QAAmE,OAAnE;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,OAAOC,WAAP;AACA,SAASC,cAAT;AACA,OAAOC,UAAP;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;EAClB,kBAA8BT,UAAU,CAACK,WAAD,EAAc;IAClDK,eAAe,EAAE,IADiC;IAElDC,IAAI,EAAE;EAF4C,CAAd,CAAxC;EAAA;EAAA,IAAOC,SAAP;EAAA,IAAkBC,QAAlB;;EAIA,gBAAkCX,QAAQ,CAAC,KAAD,CAA1C;EAAA;EAAA,IAAOY,SAAP;EAAA,IAAkBC,YAAlB;;EAEAhB,SAAS,CAAC,YAAM;IACZgB,YAAY,CAAC,IAAD,CAAZ;;IACA,IAAIX,YAAY,CAACY,GAAjB,EAAsB;MAClB,IAAMC,OAAO,GAAGb,YAAY,CAACY,GAAb,GAAmBZ,YAAY,CAACY,GAAhC,GAAsC,EAAtD;;MACA,IAAID,YAAJ,EAAkB;QACdF,QAAQ,CAACK,kBAAkB,CAACf,UAAU,CAACc,OAAD,CAAX,CAAnB,CAAR;MACH;IACJ;;IACD,OAAO;MAAA,OAAMF,YAAY,CAAC,KAAD,CAAlB;IAAA,CAAP;EACH,CATQ,EASN,EATM,CAAT;;EAYA,IAAI,CAACD,SAAL,EAAgB;IACZ,OAAO,IAAP;EACH,CAFD,MAEO;IACH,OACI,KAAC,UAAD,CAAY,QAAZ;MACI,KAAK,EAAE;QACHF,SAAS,EAATA,SADG;QAEHC,QAAQ,EAARA;MAFG,CADX;MAAA,UAMKJ,KAAK,CAACU;IANX,EADJ;EAUH;AACJ,CAjCD;;AAmCA,eAAeX,IAAf"},"metadata":{},"sourceType":"module"}